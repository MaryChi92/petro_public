version: '3.8'

services:

  db:
    image: "postgres:15.4-alpine"
    env_file:
      - ./app/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"

  web:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - ./app/.env
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
    command: sh -c "./run.sh"
    expose:
      - 8000
    volumes:
      - ./app:/app
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /etc/letsencrypt/:/etc/ssl-certificate/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app:/app
    depends_on:
      - web

volumes:
  postgres_db_dumps: {}
  postgres_db_data: {}
